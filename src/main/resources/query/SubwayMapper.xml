<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.exflyer.oddi.user.api.adv.subway.dao.SubwayMapper">

	<select id="findAbleSubwayLineList" resultType="com.exflyer.oddi.user.api.adv.subway.dto.SubwayLine">
		select *
			from (
						select
										ps.subway_code as code
									, c.name as name
									, c.ordering
									, f.seq as file_seq
									, f.path
									, f.name as file_name
									, f.extension
							from partner p
							join partner_subway ps on p.seq = ps.partner_seq
							join code c on ps.subway_code = c.code
							left join files f on p.map_file_seq = f.seq
						where channel_type = 'PTT002'
							and operation = true
							<if test = 'seq > 0'>
								and
								ps.partner_seq = #{seq}
							</if>
						group by subway_code
					) t
			order by t.ordering
	</select>

	<select id="findPartnerSubwayName" resultType="com.exflyer.oddi.user.api.adv.subway.dto.SubwayName">
		select t.seq
		     , t.mall_name as name
		     , badge_code
		     , GROUP_CONCAT(t.subway_code) as subway_code
		from (
				 select
					 p.seq
				 	,p.mall_name
				    ,p.badge_code
				 	, subway_code
				 from partner p
						join partner_subway ps on p.seq = ps.partner_seq
						join code c on ps.subway_code = c.code
				 where channel_type = 'PTT002'
				   and operation = true
		    	order by ps.subway_seq, ps.reg_date
			 ) t
		group by t.seq
	</select>

	<select id="findSubwayPartnerList" resultType="com.exflyer.oddi.user.api.adv.subway.dto.SubwayPartnerListRes">
		select seq
				,mall_name
				,summary
				,description
				,badge_code
				,total_slot
				,slot_video_time
				,slot_price
				,operation_start_time
				,operation_end_time
				,location
				,display
		from
		     partner p
		where
		      channel_type = 'PTT002'
			and
		      operation = true

 		<if test = '@org.apache.commons.lang3.StringUtils@isNotBlank(subwayName)'>
			and
		      mall_name = #{subwayName}
		</if>

		<if test = '@org.apache.commons.lang3.StringUtils@isNotBlank(subwayCode)'>
			and
			seq in (select partner_seq from partner_subway where subway_code = #{subwayCode})
		</if>
		<if test = 'isTransfer'>
			and
			(select count(*) from partner_subway where partner_seq = p.seq) > 1
		</if>

	</select>

	<select id ="findSubwayPartnerImage" resultType="com.exflyer.oddi.user.api.adv.subway.dto.SubwayImage">
		select f.seq,
			   path,
			   name
		from files f
				 inner join partner_image pi on pi.file_seq = f.seq
		where pi.partner_seq = #{seq}
	</select>

	<select id="findReadyPartnerSlotList" resultType="com.exflyer.oddi.user.api.adv.subway.dto.SubwayReadyPartnerSlotRes">
		select
			partner.seq as partner_seq
		 	, partner.total_slot
			, ifnull(v.used_slot_count, 0) + 1 as used_slot
			, ifnull(case when partner.total_slot <![CDATA[<]]> v.used_slot_count then 0
							else partner.total_slot - (ifnull(v.used_slot_count, 0) + 1)
			end, partner.total_slot) as ready_slot
		from
		 	partner
			left outer join (
				select
					v.partner_seq
					, sum(ifnull(used_slot_count, 0)) as used_slot_count
				from (
					select
						partner.partner_seq
						, sum(case when adv.start_date between #{startDate} and #{endDate} then partner.request_slot
									 when adv.end_date   between #{startDate} and #{endDate} then partner.request_slot
									 when adv.start_date <![CDATA[<=]]> #{startDate} and adv.end_date >= #{endDate} then partner.request_slot
									 else 0
						end) as used_slot_count
					from
						adv
						inner join adv_partner partner
						on
								partner.adv_seq = adv.seq
					where
						adv.channel_type = 'PTT002'
					and
						adv.progress_code in ('PGT001', 'PGT002')
					and
						( adv.end_date >= #{startDate} )
					<choose>
					 <when test="!@org.springframework.util.CollectionUtils@isEmpty(partnerSeqList)">
					and
						partner.partner_seq in
						<foreach collection="partnerSeqList" item="partnerSeq" open="(" separator="," close=")">
							#{partnerSeq}
						</foreach>
						</when>
						<otherwise>
						and
							partner.partner_seq = #{partnerSeq}
						</otherwise>
					</choose>
					group by
						partner.partner_seq
				) v
			) v
			on
				v.partner_seq = partner.seq
		where
			partner.channel_type = 'PTT002'
		and
		<choose>
			<when test="!@org.springframework.util.CollectionUtils@isEmpty(partnerSeqList)">
				partner.seq in
				<foreach collection="partnerSeqList" item="partnerSeq" open="(" separator="," close=")">
					#{partnerSeq}
				</foreach>
			</when>
			<otherwise>
				partner.seq = #{partnerSeq}
			</otherwise>
		</choose>
		order by
			partner.seq
	</select>
</mapper>
